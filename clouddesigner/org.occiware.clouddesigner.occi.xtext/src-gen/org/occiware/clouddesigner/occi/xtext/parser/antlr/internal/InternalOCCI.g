/*
 * generated by Xtext
 */
grammar InternalOCCI;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.occiware.clouddesigner.occi.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.occiware.clouddesigner.occi.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.occiware.clouddesigner.occi.xtext.services.OCCIGrammarAccess;

}

@parser::members {

 	private OCCIGrammarAccess grammarAccess;
 	
    public InternalOCCIParser(TokenStream input, OCCIGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Extension";	
   	}
   	
   	@Override
   	protected OCCIGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleExtension
entryRuleExtension returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtensionRule()); }
	 iv_ruleExtension=ruleExtension 
	 { $current=$iv_ruleExtension.current; } 
	 EOF 
;

// Rule Extension
ruleExtension returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Extension' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExtensionAccess().getExtensionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtensionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtensionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExtensionAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='scheme' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExtensionAccess().getSchemeKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtensionAccess().getSchemeEStringParserRuleCall_4_0()); 
	    }
		lv_scheme_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtensionRule());
	        }
       		set(
       			$current, 
       			"scheme",
        		lv_scheme_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='import' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExtensionAccess().getImportKeyword_5_0());
    }
	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExtensionAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtensionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtensionAccess().getImportExtensionCrossReference_5_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExtensionAccess().getCommaKeyword_5_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtensionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtensionAccess().getImportExtensionCrossReference_5_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getExtensionAccess().getRightParenthesisKeyword_5_4());
    }
)?(	otherlv_11='kinds' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getExtensionAccess().getKindsKeyword_6_0());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getExtensionAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtensionAccess().getKindsKindParserRuleCall_6_2_0()); 
	    }
		lv_kinds_13_0=ruleKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtensionRule());
	        }
       		add(
       			$current, 
       			"kinds",
        		lv_kinds_13_0, 
        		"Kind");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getExtensionAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtensionAccess().getKindsKindParserRuleCall_6_3_1_0()); 
	    }
		lv_kinds_15_0=ruleKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtensionRule());
	        }
       		add(
       			$current, 
       			"kinds",
        		lv_kinds_15_0, 
        		"Kind");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getExtensionAccess().getRightCurlyBracketKeyword_6_4());
    }
)?(	otherlv_17='mixins' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getExtensionAccess().getMixinsKeyword_7_0());
    }
	otherlv_18='{' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getExtensionAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtensionAccess().getMixinsMixinParserRuleCall_7_2_0()); 
	    }
		lv_mixins_19_0=ruleMixin		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtensionRule());
	        }
       		add(
       			$current, 
       			"mixins",
        		lv_mixins_19_0, 
        		"Mixin");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getExtensionAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtensionAccess().getMixinsMixinParserRuleCall_7_3_1_0()); 
	    }
		lv_mixins_21_0=ruleMixin		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtensionRule());
	        }
       		add(
       			$current, 
       			"mixins",
        		lv_mixins_21_0, 
        		"Mixin");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getExtensionAccess().getRightCurlyBracketKeyword_7_4());
    }
)?	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getExtensionAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleKind
entryRuleKind returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKindRule()); }
	 iv_ruleKind=ruleKind 
	 { $current=$iv_ruleKind.current; } 
	 EOF 
;

// Rule Kind
ruleKind returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Kind' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKindAccess().getKindKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKindAccess().getTermEStringParserRuleCall_1_0()); 
	    }
		lv_term_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKindRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getKindAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='scheme' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKindAccess().getSchemeKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKindAccess().getSchemeEStringParserRuleCall_4_0()); 
	    }
		lv_scheme_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKindRule());
	        }
       		set(
       			$current, 
       			"scheme",
        		lv_scheme_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='title' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getKindAccess().getTitleKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKindAccess().getTitleEStringParserRuleCall_5_1_0()); 
	    }
		lv_title_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKindRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='parent' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getKindAccess().getParentKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getKindRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getKindAccess().getParentKindCrossReference_6_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='attributes' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getKindAccess().getAttributesKeyword_7_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getKindAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKindAccess().getAttributesAttributeParserRuleCall_7_2_0()); 
	    }
		lv_attributes_11_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKindRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_11_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getKindAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKindAccess().getAttributesAttributeParserRuleCall_7_3_1_0()); 
	    }
		lv_attributes_13_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKindRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_13_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getKindAccess().getRightCurlyBracketKeyword_7_4());
    }
)?(	otherlv_15='actions' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getKindAccess().getActionsKeyword_8_0());
    }
	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getKindAccess().getLeftCurlyBracketKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKindAccess().getActionsActionParserRuleCall_8_2_0()); 
	    }
		lv_actions_17_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKindRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_17_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getKindAccess().getCommaKeyword_8_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKindAccess().getActionsActionParserRuleCall_8_3_1_0()); 
	    }
		lv_actions_19_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKindRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_19_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getKindAccess().getRightCurlyBracketKeyword_8_4());
    }
)?	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getKindAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleMixin
entryRuleMixin returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMixinRule()); }
	 iv_ruleMixin=ruleMixin 
	 { $current=$iv_ruleMixin.current; } 
	 EOF 
;

// Rule Mixin
ruleMixin returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Mixin' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMixinAccess().getMixinKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMixinAccess().getTermEStringParserRuleCall_1_0()); 
	    }
		lv_term_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMixinRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMixinAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='scheme' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMixinAccess().getSchemeKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMixinAccess().getSchemeEStringParserRuleCall_4_0()); 
	    }
		lv_scheme_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMixinRule());
	        }
       		set(
       			$current, 
       			"scheme",
        		lv_scheme_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='title' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMixinAccess().getTitleKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMixinAccess().getTitleEStringParserRuleCall_5_1_0()); 
	    }
		lv_title_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMixinRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='attributes' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMixinAccess().getAttributesKeyword_6_0());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMixinAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMixinAccess().getAttributesAttributeParserRuleCall_6_2_0()); 
	    }
		lv_attributes_9_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMixinRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_9_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMixinAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMixinAccess().getAttributesAttributeParserRuleCall_6_3_1_0()); 
	    }
		lv_attributes_11_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMixinRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_11_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMixinAccess().getRightCurlyBracketKeyword_6_4());
    }
)?(	otherlv_13='actions' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMixinAccess().getActionsKeyword_7_0());
    }
	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMixinAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMixinAccess().getActionsActionParserRuleCall_7_2_0()); 
	    }
		lv_actions_15_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMixinRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_15_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getMixinAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMixinAccess().getActionsActionParserRuleCall_7_3_1_0()); 
	    }
		lv_actions_17_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMixinRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_17_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getMixinAccess().getRightCurlyBracketKeyword_7_4());
    }
)?	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getMixinAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttributeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='mutable' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getMutableKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getMutableEBooleanParserRuleCall_3_1_0()); 
	    }
		lv_mutable_4_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"mutable",
        		lv_mutable_4_0, 
        		"EBoolean");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='required' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getRequiredKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getRequiredEBooleanParserRuleCall_4_1_0()); 
	    }
		lv_required_6_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"required",
        		lv_required_6_0, 
        		"EBoolean");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='default' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getDefaultKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getDefaultEStringParserRuleCall_5_1_0()); 
	    }
		lv_default_8_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_8_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='description' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAttributeAccess().getDescriptionKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getDescriptionEStringParserRuleCall_6_1_0()); 
	    }
		lv_description_10_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Action' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActionAccess().getActionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getTermEStringParserRuleCall_1_0()); 
	    }
		lv_term_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='scheme' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getActionAccess().getSchemeKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getSchemeEStringParserRuleCall_4_0()); 
	    }
		lv_scheme_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"scheme",
        		lv_scheme_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='title' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getActionAccess().getTitleKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getTitleEStringParserRuleCall_5_1_0()); 
	    }
		lv_title_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='attributes' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getActionAccess().getAttributesKeyword_6_0());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getAttributesAttributeParserRuleCall_6_2_0()); 
	    }
		lv_attributes_9_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_9_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getActionAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getAttributesAttributeParserRuleCall_6_3_1_0()); 
	    }
		lv_attributes_11_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_11_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getActionAccess().getRightCurlyBracketKeyword_6_4());
    }
)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getActionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleEEnum
entryRuleEEnum returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEEnumRule()); }
	 iv_ruleEEnum=ruleEEnum 
	 { $current=$iv_ruleEEnum.current; } 
	 EOF 
;

// Rule EEnum
ruleEEnum returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEEnumAccess().getEEnumAction_0(),
            $current);
    }
)	otherlv_1='EEnum' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEEnumAccess().getEEnumKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEEnumAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEEnumRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEEnumAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='instanceClassName' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEEnumAccess().getInstanceClassNameKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEEnumAccess().getInstanceClassNameEStringParserRuleCall_4_1_0()); 
	    }
		lv_instanceClassName_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEEnumRule());
	        }
       		set(
       			$current, 
       			"instanceClassName",
        		lv_instanceClassName_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='instanceTypeName' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEEnumAccess().getInstanceTypeNameKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEEnumAccess().getInstanceTypeNameEStringParserRuleCall_5_1_0()); 
	    }
		lv_instanceTypeName_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEEnumRule());
	        }
       		set(
       			$current, 
       			"instanceTypeName",
        		lv_instanceTypeName_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='serializable' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEEnumAccess().getSerializableKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEEnumAccess().getSerializableEBooleanParserRuleCall_6_1_0()); 
	    }
		lv_serializable_9_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEEnumRule());
	        }
       		set(
       			$current, 
       			"serializable",
        		lv_serializable_9_0, 
        		"EBoolean");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='eLiterals' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEEnumAccess().getELiteralsKeyword_7_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEEnumAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEEnumAccess().getELiteralsEEnumLiteralParserRuleCall_7_2_0()); 
	    }
		lv_eLiterals_12_0=ruleEEnumLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEEnumRule());
	        }
       		add(
       			$current, 
       			"eLiterals",
        		lv_eLiterals_12_0, 
        		"EEnumLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getEEnumAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEEnumAccess().getELiteralsEEnumLiteralParserRuleCall_7_3_1_0()); 
	    }
		lv_eLiterals_14_0=ruleEEnumLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEEnumRule());
	        }
       		add(
       			$current, 
       			"eLiterals",
        		lv_eLiterals_14_0, 
        		"EEnumLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getEEnumAccess().getRightCurlyBracketKeyword_7_4());
    }
)?	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getEEnumAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleEEnumLiteral
entryRuleEEnumLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEEnumLiteralRule()); }
	 iv_ruleEEnumLiteral=ruleEEnumLiteral 
	 { $current=$iv_ruleEEnumLiteral.current; } 
	 EOF 
;

// Rule EEnumLiteral
ruleEEnumLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEEnumLiteralAccess().getEEnumLiteralAction_0(),
            $current);
    }
)	otherlv_1='EEnumLiteral' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEEnumLiteralAccess().getEEnumLiteralKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEEnumLiteralAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEEnumLiteralRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEEnumLiteralAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='value' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEEnumLiteralAccess().getValueKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEEnumLiteralAccess().getValueEIntParserRuleCall_4_1_0()); 
	    }
		lv_value_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEEnumLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='literal' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEEnumLiteralAccess().getLiteralKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEEnumLiteralAccess().getLiteralEStringParserRuleCall_5_1_0()); 
	    }
		lv_literal_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEEnumLiteralRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEEnumLiteralAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEDataType_Impl
entryRuleEDataType_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEDataType_ImplRule()); }
	 iv_ruleEDataType_Impl=ruleEDataType_Impl 
	 { $current=$iv_ruleEDataType_Impl.current; } 
	 EOF 
;

// Rule EDataType_Impl
ruleEDataType_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEDataType_ImplAccess().getEDataTypeAction_0(),
            $current);
    }
)	otherlv_1='EDataType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEDataType_ImplAccess().getEDataTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEDataType_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEDataType_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEDataType_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='instanceClassName' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEDataType_ImplAccess().getInstanceClassNameKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEDataType_ImplAccess().getInstanceClassNameEStringParserRuleCall_4_1_0()); 
	    }
		lv_instanceClassName_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEDataType_ImplRule());
	        }
       		set(
       			$current, 
       			"instanceClassName",
        		lv_instanceClassName_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='instanceTypeName' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEDataType_ImplAccess().getInstanceTypeNameKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEDataType_ImplAccess().getInstanceTypeNameEStringParserRuleCall_5_1_0()); 
	    }
		lv_instanceTypeName_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEDataType_ImplRule());
	        }
       		set(
       			$current, 
       			"instanceTypeName",
        		lv_instanceTypeName_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='serializable' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEDataType_ImplAccess().getSerializableKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEDataType_ImplAccess().getSerializableEBooleanParserRuleCall_6_1_0()); 
	    }
		lv_serializable_9_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEDataType_ImplRule());
	        }
       		set(
       			$current, 
       			"serializable",
        		lv_serializable_9_0, 
        		"EBoolean");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEDataType_ImplAccess().getRightCurlyBracketKeyword_7());
    }
)
;







// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); } 
	 iv_ruleEBoolean=ruleEBoolean 
	 { $current=$iv_ruleEBoolean.current.getText(); }  
	 EOF 
;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


