/*
 * generated by Xtext
 */
grammar InternalOCCI;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.occiware.clouddesigner.occi.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.occiware.clouddesigner.occi.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.occiware.clouddesigner.occi.xtext.services.OCCIGrammarAccess;

}

@parser::members {

 	private OCCIGrammarAccess grammarAccess;
 	
    public InternalOCCIParser(TokenStream input, OCCIGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Grammar";	
   	}
   	
   	@Override
   	protected OCCIGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleGrammar
entryRuleGrammar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGrammarRule()); }
	 iv_ruleGrammar=ruleGrammar 
	 { $current=$iv_ruleGrammar.current; } 
	 EOF 
;

// Rule Grammar
ruleGrammar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGrammarAccess().getExtensionDeclParserRuleCall_0()); 
    }
    this_ExtensionDecl_0=ruleExtensionDecl
    { 
        $current = $this_ExtensionDecl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGrammarAccess().getConfigurationDeclParserRuleCall_1()); 
    }
    this_ConfigurationDecl_1=ruleConfigurationDecl
    { 
        $current = $this_ConfigurationDecl_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExtensionDecl
entryRuleExtensionDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtensionDeclRule()); }
	 iv_ruleExtensionDecl=ruleExtensionDecl 
	 { $current=$iv_ruleExtensionDecl.current; } 
	 EOF 
;

// Rule ExtensionDecl
ruleExtensionDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extension' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExtensionDeclAccess().getExtensionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExtensionDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtensionDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExtensionDeclAccess().getColonKeyword_2());
    }
(
(
		lv_scheme_3_0=RULE_STRING
		{
			newLeafNode(lv_scheme_3_0, grammarAccess.getExtensionDeclAccess().getSchemeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtensionDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"scheme",
        		lv_scheme_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4='import' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExtensionDeclAccess().getImportKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtensionDeclRule());
	        }
        }
	otherlv_5=RULE_STRING
	{
		newLeafNode(otherlv_5, grammarAccess.getExtensionDeclAccess().getImportExtensionCrossReference_4_1_0()); 
	}

)
)(	otherlv_6='as' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExtensionDeclAccess().getAsKeyword_4_2_0());
    }
this_ID_7=RULE_ID
    { 
    newLeafNode(this_ID_7, grammarAccess.getExtensionDeclAccess().getIDTerminalRuleCall_4_2_1()); 
    }
)?)*((
(
		{ 
	        newCompositeNode(grammarAccess.getExtensionDeclAccess().getKindsKindDeclParserRuleCall_5_0_0()); 
	    }
		lv_kinds_8_0=ruleKindDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtensionDeclRule());
	        }
       		add(
       			$current, 
       			"kinds",
        		lv_kinds_8_0, 
        		"KindDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExtensionDeclAccess().getMixinsMixinDeclParserRuleCall_5_1_0()); 
	    }
		lv_mixins_9_0=ruleMixinDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtensionDeclRule());
	        }
       		add(
       			$current, 
       			"mixins",
        		lv_mixins_9_0, 
        		"MixinDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExtensionDeclAccess().getTypesDataTypeDeclParserRuleCall_5_2_0()); 
	    }
		lv_types_10_0=ruleDataTypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtensionDeclRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_10_0, 
        		"DataTypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExtensionDeclAccess().getTypesEnumTypeDeclParserRuleCall_5_3_0()); 
	    }
		lv_types_11_0=ruleEnumTypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtensionDeclRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_11_0, 
        		"EnumTypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleKindDecl
entryRuleKindDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKindDeclRule()); }
	 iv_ruleKindDecl=ruleKindDecl 
	 { $current=$iv_ruleKindDecl.current; } 
	 EOF 
;

// Rule KindDecl
ruleKindDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='kind' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKindDeclAccess().getKindKeyword_0());
    }
(
(
		lv_term_1_0=RULE_ID
		{
			newLeafNode(lv_term_1_0, grammarAccess.getKindDeclAccess().getTermIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKindDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"term",
        		lv_term_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getKindDeclAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getKindDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getKindDeclAccess().getParentKindCrossReference_2_1_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getKindDeclAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_5='title' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getKindDeclAccess().getTitleKeyword_4_0());
    }
(
(
		lv_title_6_0=RULE_STRING
		{
			newLeafNode(lv_title_6_0, grammarAccess.getKindDeclAccess().getTitleSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKindDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"STRING");
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getKindDeclAccess().getAttributesAttributeDeclParserRuleCall_5_0_0()); 
	    }
		lv_attributes_7_0=ruleAttributeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKindDeclRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_7_0, 
        		"AttributeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getKindDeclAccess().getActionsActionDeclParserRuleCall_5_1_0()); 
	    }
		lv_actions_8_0=ruleActionDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKindDeclRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_8_0, 
        		"ActionDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getKindDeclAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleMixinDecl
entryRuleMixinDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMixinDeclRule()); }
	 iv_ruleMixinDecl=ruleMixinDecl 
	 { $current=$iv_ruleMixinDecl.current; } 
	 EOF 
;

// Rule MixinDecl
ruleMixinDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mixin' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMixinDeclAccess().getMixinKeyword_0());
    }
(
(
		lv_term_1_0=RULE_ID
		{
			newLeafNode(lv_term_1_0, grammarAccess.getMixinDeclAccess().getTermIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMixinDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"term",
        		lv_term_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='depends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMixinDeclAccess().getDependsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMixinDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMixinDeclAccess().getDependsMixinCrossReference_2_1_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMixinDeclAccess().getCommaKeyword_2_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMixinDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMixinDeclAccess().getDependsMixinCrossReference_2_2_1_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_6='applies' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMixinDeclAccess().getAppliesKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMixinDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMixinDeclAccess().getAppliesKindCrossReference_3_1_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMixinDeclAccess().getCommaKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMixinDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMixinDeclAccess().getAppliesKindCrossReference_3_2_1_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMixinDeclAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_11='scheme' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMixinDeclAccess().getSchemeKeyword_5_0());
    }
(
(
		lv_scheme_12_0=RULE_STRING
		{
			newLeafNode(lv_scheme_12_0, grammarAccess.getMixinDeclAccess().getSchemeSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMixinDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"scheme",
        		lv_scheme_12_0, 
        		"STRING");
	    }

)
))?(	otherlv_13='title' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMixinDeclAccess().getTitleKeyword_6_0());
    }
(
(
		lv_title_14_0=RULE_STRING
		{
			newLeafNode(lv_title_14_0, grammarAccess.getMixinDeclAccess().getTitleSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMixinDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_14_0, 
        		"STRING");
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getMixinDeclAccess().getAttributesAttributeDeclParserRuleCall_7_0_0()); 
	    }
		lv_attributes_15_0=ruleAttributeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMixinDeclRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_15_0, 
        		"AttributeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMixinDeclAccess().getActionsActionDeclParserRuleCall_7_1_0()); 
	    }
		lv_actions_16_0=ruleActionDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMixinDeclRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_16_0, 
        		"ActionDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getMixinDeclAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleAttributeDecl
entryRuleAttributeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeDeclRule()); }
	 iv_ruleAttributeDecl=ruleAttributeDecl 
	 { $current=$iv_ruleAttributeDecl.current; } 
	 EOF 
;

// Rule AttributeDecl
ruleAttributeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeDeclAccess().getAttributeKeyword_0());
    }
(
(
		lv_mutable_1_0=	'mutable' 
    {
        newLeafNode(lv_mutable_1_0, grammarAccess.getAttributeDeclAccess().getMutableMutableKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclRule());
	        }
       		setWithLastConsumed($current, "mutable", true, "mutable");
	    }

)
)?(
(
		lv_required_2_0=	'required' 
    {
        newLeafNode(lv_required_2_0, grammarAccess.getAttributeDeclAccess().getRequiredRequiredKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getAttributeDeclAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeDeclAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAttributeDeclAccess().getTypeEDataTypeCrossReference_5_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='*' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAttributeDeclAccess().getAsteriskKeyword_6());
    }
)?(	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAttributeDeclAccess().getEqualsSignKeyword_7_0());
    }
(
(
		lv_default_8_0=RULE_STRING
		{
			newLeafNode(lv_default_8_0, grammarAccess.getAttributeDeclAccess().getDefaultSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"default",
        		lv_default_8_0, 
        		"STRING");
	    }

)
))?(	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAttributeDeclAccess().getLeftCurlyBracketKeyword_8_0());
    }
(	otherlv_10='description' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAttributeDeclAccess().getDescriptionKeyword_8_1_0());
    }
(
(
		lv_description_11_0=RULE_STRING
		{
			newLeafNode(lv_description_11_0, grammarAccess.getAttributeDeclAccess().getDescriptionSTRINGTerminalRuleCall_8_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_11_0, 
        		"STRING");
	    }

)
))?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getAttributeDeclAccess().getRightCurlyBracketKeyword_8_2());
    }
)?)
;





// Entry rule entryRuleActionDecl
entryRuleActionDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionDeclRule()); }
	 iv_ruleActionDecl=ruleActionDecl 
	 { $current=$iv_ruleActionDecl.current; } 
	 EOF 
;

// Rule ActionDecl
ruleActionDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='action' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActionDeclAccess().getActionKeyword_0());
    }
(
(
		lv_term_1_0=RULE_ID
		{
			newLeafNode(lv_term_1_0, grammarAccess.getActionDeclAccess().getTermIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"term",
        		lv_term_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActionDeclAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getActionDeclAccess().getAttributesParameterDeclParserRuleCall_3_0_0()); 
	    }
		lv_attributes_3_0=ruleParameterDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionDeclRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"ParameterDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActionDeclAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionDeclAccess().getAttributesParameterDeclParserRuleCall_3_1_1_0()); 
	    }
		lv_attributes_5_0=ruleParameterDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionDeclRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_5_0, 
        		"ParameterDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getActionDeclAccess().getRightParenthesisKeyword_4());
    }
(	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getActionDeclAccess().getLeftCurlyBracketKeyword_5_0());
    }
	otherlv_8='title' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getActionDeclAccess().getTitleKeyword_5_1());
    }
(
(
		lv_title_9_0=RULE_STRING
		{
			newLeafNode(lv_title_9_0, grammarAccess.getActionDeclAccess().getTitleSTRINGTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_9_0, 
        		"STRING");
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getActionDeclAccess().getRightCurlyBracketKeyword_5_3());
    }
)?)
;





// Entry rule entryRuleParameterDecl
entryRuleParameterDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterDeclRule()); }
	 iv_ruleParameterDecl=ruleParameterDecl 
	 { $current=$iv_ruleParameterDecl.current; } 
	 EOF 
;

// Rule ParameterDecl
ruleParameterDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getParameterDeclAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterDeclAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeEDataTypeCrossReference_2_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_multiple_values_3_0=	'*' 
    {
        newLeafNode(lv_multiple_values_3_0, grammarAccess.getParameterDeclAccess().getMultiple_valuesAsteriskKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterDeclRule());
	        }
       		setWithLastConsumed($current, "multiple_values", true, "*");
	    }

)
)?)
;





// Entry rule entryRuleDataTypeDecl
entryRuleDataTypeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeDeclRule()); }
	 iv_ruleDataTypeDecl=ruleDataTypeDecl 
	 { $current=$iv_ruleDataTypeDecl.current; } 
	 EOF 
;

// Rule DataTypeDecl
ruleDataTypeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeDeclAccess().getEDataTypeAction_0(),
            $current);
    }
)	otherlv_1='datatype' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeDeclAccess().getDatatypeKeyword_1());
    }
(
(
		lv_serializable_2_0=	'serializable' 
    {
        newLeafNode(lv_serializable_2_0, grammarAccess.getDataTypeDeclAccess().getSerializableSerializableKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeDeclRule());
	        }
       		setWithLastConsumed($current, "serializable", true, "serializable");
	    }

)
)?(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getDataTypeDeclAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataTypeDeclAccess().getColonKeyword_4());
    }
(
(
		lv_instanceClassName_5_0=RULE_STRING
		{
			newLeafNode(lv_instanceClassName_5_0, grammarAccess.getDataTypeDeclAccess().getInstanceClassNameSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"instanceClassName",
        		lv_instanceClassName_5_0, 
        		"STRING");
	    }

)
)(	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataTypeDeclAccess().getLeftCurlyBracketKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeDeclAccess().getEAnnotationsDataTypeAnnotationsParserRuleCall_6_1_0()); 
	    }
		lv_eAnnotations_7_0=ruleDataTypeAnnotations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeDeclRule());
	        }
       		add(
       			$current, 
       			"eAnnotations",
        		lv_eAnnotations_7_0, 
        		"DataTypeAnnotations");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataTypeDeclAccess().getRightCurlyBracketKeyword_6_2());
    }
)?)
;





// Entry rule entryRuleDataTypeAnnotations
entryRuleDataTypeAnnotations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeAnnotationsRule()); }
	 iv_ruleDataTypeAnnotations=ruleDataTypeAnnotations 
	 { $current=$iv_ruleDataTypeAnnotations.current; } 
	 EOF 
;

// Rule DataTypeAnnotations
ruleDataTypeAnnotations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationsAccess().getDetailsDataTypeAnnotationParserRuleCall_0()); 
	    }
		lv_details_0_0=ruleDataTypeAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationsRule());
	        }
       		add(
       			$current, 
       			"details",
        		lv_details_0_0, 
        		"DataTypeAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleDataTypeAnnotation
entryRuleDataTypeAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeAnnotationRule()); }
	 iv_ruleDataTypeAnnotation=ruleDataTypeAnnotation 
	 { $current=$iv_ruleDataTypeAnnotation.current; } 
	 EOF 
;

// Rule DataTypeAnnotation
ruleDataTypeAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_key_0_0=	'minExclusive' 
    {
        newLeafNode(lv_key_0_0, grammarAccess.getDataTypeAnnotationAccess().getKeyMinExclusiveKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_0_0, "minExclusive");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationAccess().getValueIntegerParserRuleCall_0_2_0()); 
	    }
		lv_value_2_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_key_3_0=	'minInclusive' 
    {
        newLeafNode(lv_key_3_0, grammarAccess.getDataTypeAnnotationAccess().getKeyMinInclusiveKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_3_0, "minInclusive");
	    }

)
)	otherlv_4='minInclusive' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataTypeAnnotationAccess().getMinInclusiveKeyword_1_1());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationAccess().getValueIntegerParserRuleCall_1_3_0()); 
	    }
		lv_value_6_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_key_7_0=	'maxExclusive' 
    {
        newLeafNode(lv_key_7_0, grammarAccess.getDataTypeAnnotationAccess().getKeyMaxExclusiveKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_7_0, "maxExclusive");
	    }

)
)	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationAccess().getValueIntegerParserRuleCall_2_2_0()); 
	    }
		lv_value_9_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_9_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_key_10_0=	'maxInclusive' 
    {
        newLeafNode(lv_key_10_0, grammarAccess.getDataTypeAnnotationAccess().getKeyMaxInclusiveKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_10_0, "maxInclusive");
	    }

)
)	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationAccess().getValueIntegerParserRuleCall_3_2_0()); 
	    }
		lv_value_12_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_12_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_key_13_0=	'totalDigits' 
    {
        newLeafNode(lv_key_13_0, grammarAccess.getDataTypeAnnotationAccess().getKeyTotalDigitsKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_13_0, "totalDigits");
	    }

)
)	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationAccess().getValuePositiveIntegerParserRuleCall_4_2_0()); 
	    }
		lv_value_15_0=rulePositiveInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_15_0, 
        		"PositiveInteger");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_key_16_0=	'fractionDigits' 
    {
        newLeafNode(lv_key_16_0, grammarAccess.getDataTypeAnnotationAccess().getKeyFractionDigitsKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_16_0, "fractionDigits");
	    }

)
)	otherlv_17='=' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationAccess().getValuePositiveIntegerParserRuleCall_5_2_0()); 
	    }
		lv_value_18_0=rulePositiveInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_18_0, 
        		"PositiveInteger");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_key_19_0=	'length' 
    {
        newLeafNode(lv_key_19_0, grammarAccess.getDataTypeAnnotationAccess().getKeyLengthKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_19_0, "length");
	    }

)
)	otherlv_20='=' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationAccess().getValuePositiveIntegerParserRuleCall_6_2_0()); 
	    }
		lv_value_21_0=rulePositiveInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_21_0, 
        		"PositiveInteger");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_key_22_0=	'minLength' 
    {
        newLeafNode(lv_key_22_0, grammarAccess.getDataTypeAnnotationAccess().getKeyMinLengthKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_22_0, "minLength");
	    }

)
)	otherlv_23='=' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationAccess().getValuePositiveIntegerParserRuleCall_7_2_0()); 
	    }
		lv_value_24_0=rulePositiveInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_24_0, 
        		"PositiveInteger");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_key_25_0=	'maxLength' 
    {
        newLeafNode(lv_key_25_0, grammarAccess.getDataTypeAnnotationAccess().getKeyMaxLengthKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_25_0, "maxLength");
	    }

)
)	otherlv_26='=' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationAccess().getValuePositiveIntegerParserRuleCall_8_2_0()); 
	    }
		lv_value_27_0=rulePositiveInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_27_0, 
        		"PositiveInteger");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_key_28_0=	'whiteSpace' 
    {
        newLeafNode(lv_key_28_0, grammarAccess.getDataTypeAnnotationAccess().getKeyWhiteSpaceKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_28_0, "whiteSpace");
	    }

)
)	otherlv_29='=' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAnnotationAccess().getValuePositiveIntegerParserRuleCall_9_2_0()); 
	    }
		lv_value_30_0=rulePositiveInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_30_0, 
        		"PositiveInteger");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_key_31_0=	'pattern' 
    {
        newLeafNode(lv_key_31_0, grammarAccess.getDataTypeAnnotationAccess().getKeyPatternKeyword_10_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed($current, "key", lv_key_31_0, "pattern");
	    }

)
)	otherlv_32='=' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getDataTypeAnnotationAccess().getEqualsSignKeyword_10_1());
    }
(
(
		lv_value_33_0=RULE_STRING
		{
			newLeafNode(lv_value_33_0, grammarAccess.getDataTypeAnnotationAccess().getValueSTRINGTerminalRuleCall_10_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_33_0, 
        		"STRING");
	    }

)
)))
;





// Entry rule entryRuleEnumTypeDecl
entryRuleEnumTypeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumTypeDeclRule()); }
	 iv_ruleEnumTypeDecl=ruleEnumTypeDecl 
	 { $current=$iv_ruleEnumTypeDecl.current; } 
	 EOF 
;

// Rule EnumTypeDecl
ruleEnumTypeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEnumTypeDeclAccess().getEEnumAction_0(),
            $current);
    }
)	otherlv_1='enum' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumTypeDeclAccess().getEnumKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getEnumTypeDeclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumTypeDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumTypeDeclAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeDeclAccess().getELiteralsEnumLiteralDeclParserRuleCall_4_0()); 
	    }
		lv_eLiterals_4_0=ruleEnumLiteralDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumTypeDeclRule());
	        }
       		add(
       			$current, 
       			"eLiterals",
        		lv_eLiterals_4_0, 
        		"EnumLiteralDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumTypeDeclAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeDeclAccess().getELiteralsEnumLiteralDeclParserRuleCall_5_1_0()); 
	    }
		lv_eLiterals_6_0=ruleEnumLiteralDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumTypeDeclRule());
	        }
       		add(
       			$current, 
       			"eLiterals",
        		lv_eLiterals_6_0, 
        		"EnumLiteralDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEnumTypeDeclAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEnumLiteralDecl
entryRuleEnumLiteralDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumLiteralDeclRule()); }
	 iv_ruleEnumLiteralDecl=ruleEnumLiteralDecl 
	 { $current=$iv_ruleEnumLiteralDecl.current; } 
	 EOF 
;

// Rule EnumLiteralDecl
ruleEnumLiteralDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEnumLiteralDeclAccess().getEEnumLiteralAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnumLiteralDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumLiteralDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleConfigurationDecl
entryRuleConfigurationDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigurationDeclRule()); }
	 iv_ruleConfigurationDecl=ruleConfigurationDecl 
	 { $current=$iv_ruleConfigurationDecl.current; } 
	 EOF 
;

// Rule ConfigurationDecl
ruleConfigurationDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConfigurationDeclAccess().getConfigurationAction_0(),
            $current);
    }
)	otherlv_1='configuration' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConfigurationDeclAccess().getConfigurationKeyword_1());
    }
(	otherlv_2='use' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConfigurationDeclAccess().getUseKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigurationDeclRule());
	        }
        }
	otherlv_3=RULE_STRING
	{
		newLeafNode(otherlv_3, grammarAccess.getConfigurationDeclAccess().getUseExtensionCrossReference_2_1_0()); 
	}

)
)(	otherlv_4='as' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConfigurationDeclAccess().getAsKeyword_2_2_0());
    }
this_ID_5=RULE_ID
    { 
    newLeafNode(this_ID_5, grammarAccess.getConfigurationDeclAccess().getIDTerminalRuleCall_2_2_1()); 
    }
)?)*(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigurationDeclAccess().getResourcesResourceDeclParserRuleCall_3_0()); 
	    }
		lv_resources_6_0=ruleResourceDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigurationDeclRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_6_0, 
        		"ResourceDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleResourceDecl
entryRuleResourceDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceDeclRule()); }
	 iv_ruleResourceDecl=ruleResourceDecl 
	 { $current=$iv_ruleResourceDecl.current; } 
	 EOF 
;

// Rule ResourceDecl
ruleResourceDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='resource' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResourceDeclAccess().getResourceKeyword_0());
    }
(
(
		lv_id_1_0=RULE_STRING
		{
			newLeafNode(lv_id_1_0, grammarAccess.getResourceDeclAccess().getIdSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResourceDeclAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getResourceDeclAccess().getKindKindCrossReference_3_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='mixins' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getResourceDeclAccess().getMixinsKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getResourceDeclAccess().getMixinsMixinCrossReference_4_1_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getResourceDeclAccess().getCommaKeyword_4_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getResourceDeclAccess().getMixinsMixinCrossReference_4_2_1_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getResourceDeclAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceDeclAccess().getAttributesStateDeclParserRuleCall_6_0()); 
	    }
		lv_attributes_9_0=ruleStateDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceDeclRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_9_0, 
        		"StateDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceDeclAccess().getLinksLinkDeclParserRuleCall_7_0()); 
	    }
		lv_links_10_0=ruleLinkDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceDeclRule());
	        }
       		add(
       			$current, 
       			"links",
        		lv_links_10_0, 
        		"LinkDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getResourceDeclAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleStateDecl
entryRuleStateDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateDeclRule()); }
	 iv_ruleStateDecl=ruleStateDecl 
	 { $current=$iv_ruleStateDecl.current; } 
	 EOF 
;

// Rule StateDecl
ruleStateDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='state' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStateDeclAccess().getStateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStateDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStateDeclAccess().getEqualsSignKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getStateDeclAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleLinkDecl
entryRuleLinkDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkDeclRule()); }
	 iv_ruleLinkDecl=ruleLinkDecl 
	 { $current=$iv_ruleLinkDecl.current; } 
	 EOF 
;

// Rule LinkDecl
ruleLinkDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='link' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkDeclAccess().getLinkKeyword_0());
    }
(
(
		lv_id_1_0=RULE_STRING
		{
			newLeafNode(lv_id_1_0, grammarAccess.getLinkDeclAccess().getIdSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLinkDeclAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLinkDeclAccess().getKindKindCrossReference_3_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='mixins' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLinkDeclAccess().getMixinsKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLinkDeclAccess().getMixinsMixinCrossReference_4_1_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLinkDeclAccess().getCommaKeyword_4_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkDeclRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLinkDeclAccess().getMixinsMixinCrossReference_4_2_1_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='target' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLinkDeclAccess().getTargetKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkDeclRule());
	        }
        }
	otherlv_9=RULE_STRING
	{
		newLeafNode(otherlv_9, grammarAccess.getLinkDeclAccess().getTargetResourceCrossReference_6_0()); 
	}

)
)	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLinkDeclAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkDeclAccess().getAttributesStateDeclParserRuleCall_8_0()); 
	    }
		lv_attributes_11_0=ruleStateDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkDeclRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_11_0, 
        		"StateDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLinkDeclAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleQualifiedID
entryRuleQualifiedID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedIDRule()); } 
	 iv_ruleQualifiedID=ruleQualifiedID 
	 { $current=$iv_ruleQualifiedID.current.getText(); }  
	 EOF 
;

// Rule QualifiedID
ruleQualifiedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIDAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleInteger
entryRuleInteger returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerRule()); } 
	 iv_ruleInteger=ruleInteger 
	 { $current=$iv_ruleInteger.current.getText(); }  
	 EOF 
;

// Rule Integer
ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRulePositiveInteger
entryRulePositiveInteger returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPositiveIntegerRule()); } 
	 iv_rulePositiveInteger=rulePositiveInteger 
	 { $current=$iv_rulePositiveInteger.current.getText(); }  
	 EOF 
;

// Rule PositiveInteger
rulePositiveInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getPositiveIntegerAccess().getINTTerminalRuleCall()); 
    }

    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


